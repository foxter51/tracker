services: 

  back-end:
    build: 
      context: ./express-backend
    container_name: back-end
    working_dir: /usr/src/app
    volumes: 
      - ./express-backend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "8080:8080"
    command: npm run start
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - node-network

  front-end:
    build: 
      context: ./react-frontend
    container_name: front-end
    working_dir: /usr/src/app
    volumes: 
      - ./react-frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "8081:8081"
    command: npm run start
    networks:
      - node-network

  postgres:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    tty: true
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d tracker -U ihor"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - node-network

volumes:
  postgres_data:
  
networks: 
  node-network:
    driver: bridge